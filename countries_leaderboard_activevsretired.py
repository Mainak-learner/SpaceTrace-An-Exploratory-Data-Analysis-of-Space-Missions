# -*- coding: utf-8 -*-
"""Countries_Leaderboard_ActivevsRetired.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p4Ar9zi2-MSF6eWoSPnyUP1sYXc98AlC
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
from sklearn.preprocessing import LabelEncoder

import warnings
warnings.filterwarnings("ignore")


def country_leaderboard_active_data(data):
  '''This function gets the data 
  highlighting with the leading country in
  the most number of active rockets that particular year
  across the years'''
  assert isinstance(data,pd.DataFrame)
  ds = data[data['RocketStatus']=='StatusActive']
  ds = ds.groupby(['Year', 'Country'])['RocketStatus'].count().reset_index().sort_values(['Year', 'RocketStatus'], ascending=False)
  ds = pd.concat([group[1].head(1) for group in ds.groupby(['Year'])])
  ds.columns = ['Year', 'Country', 'launches']
  return ds

def country_leaderboard_retired_data(data):
  '''This function gets the data 
  highlighting with the leading country in
  the most number of retired rockets that particular year
  across the years'''
  assert isinstance(data,pd.DataFrame)
  ds = data[data['RocketStatus']=='StatusRetired']
  ds = ds.groupby(['Year', 'Country'])['RocketStatus'].count().reset_index().sort_values(['Year', 'RocketStatus'], ascending=False)
  ds = pd.concat([group[1].head(1) for group in ds.groupby(['Year'])])
  ds.columns = ['Year', 'Country', 'launches']
  return ds

def country_leaderboard_active_plots(data):
  '''This function produces a bar graph 
  highlighting with the leading country in
  the most number of active rockets that particular year
  across the years'''
  assert isinstance(data,pd.DataFrame)
  ds = country_leaderboard_active_data(data)
  fig = px.bar(
      ds, 
      x="Year", 
      y="launches", 
      color='Country', 
      title='Leaders by Active Rockets for every year (countries)',
      width=800
  )
  fig.show()

def country_leaderboard_retired_plots(data):
  '''This function produces a bar graph 
  highlighting with the leading country in
  the most number of retired rockets that particular year
  across the years'''
  assert isinstance(data,pd.DataFrame)
  ds = country_leaderboard_retired_data(data)
  fig = px.bar(
      ds, 
      x="Year", 
      y="launches", 
      color='Country', 
      title='Leaders by Retired Rockets for every year (countries)',
      width=800
  )
  fig.show()